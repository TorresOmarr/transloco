"use strict";(self.webpackChunktransloco_docs=self.webpackChunktransloco_docs||[]).push([[1056],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||o;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4225:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"Hack The Library",description:"Hack The Library | Transloco Angular i18n"},l=void 0,i={unversionedId:"hack",id:"hack",title:"Hack The Library",description:"Hack The Library | Transloco Angular i18n",source:"@site/docs/hack.mdx",sourceDirName:".",slug:"/hack",permalink:"/transloco/docs/hack",draft:!1,editUrl:"https://github.com/jsverse/transloco/edit/master/docs/docs/hack.mdx",tags:[],version:"current",frontMatter:{title:"Hack The Library",description:"Hack The Library | Transloco Angular i18n"},sidebar:"docs",previous:{title:"The Transpiler",permalink:"/transloco/docs/transpiler"},next:{title:"Blog Posts",permalink:"/transloco/docs/blog-posts"}},s={},c=[{value:"The Loader",id:"the-loader",level:2},{value:"The Interceptor",id:"the-interceptor",level:2},{value:"Missing Handler",id:"missing-handler",level:2},{value:"Fallback Strategy",id:"fallback-strategy",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"the-loader"},"The Loader"),(0,a.kt)("p",null,"The loader provides you with the ability to override the default handling of translation file loading."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { TranslocoLoader } from '@jsverse/transloco';\n\nexport class CustomLoader implements TranslocoLoader {\n  getTranslation(lang: string) {\n    if(langInLocalStorage) {\n      return of(langFromStorage);\n    }\n\n    return ...\n  }\n}\n")),(0,a.kt)("h2",{id:"the-interceptor"},"The Interceptor"),(0,a.kt)("p",null,"The interceptor provides you with the ability to manipulate the translation object before it is saved by the service."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { TranslocoInterceptor } from '@jsverse/transloco';\n\nexport class CustomInterceptor implements TranslocoInterceptor {\n  preSaveTranslation(translation: Translation, lang: string): Translation {\n    return translation;\n  }\n\n  preSaveTranslationKey(key: string, value: string, lang: string): string {\n    return value;\n  }\n}\n")),(0,a.kt)("h2",{id:"missing-handler"},"Missing Handler"),(0,a.kt)("p",null,"This handler is responsible for handling missing keys. The default handler calls ",(0,a.kt)("inlineCode",{parentName:"p"},"console.warn()")," with the key when config.isProdMode is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),", and returns an empty string to use as a replacement for the missing key's value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { TranslocoMissingHandler } from '@jsverse/transloco';\n\nexport class CustomHandler implements TranslocoMissingHandler {\n  handle(key: string, config: TranslocoConfig) {\n    return '...';\n  }\n}\n")),(0,a.kt)("h2",{id:"fallback-strategy"},"Fallback Strategy"),(0,a.kt)("p",null,"The fallback strategy is responsible for loading the fallback translation file, when the selected active language has failed to load. The default behavior is to load the language set in the ",(0,a.kt)("inlineCode",{parentName:"p"},"config.fallbackLang"),", and set it as the new active language."),(0,a.kt)("p",null,"When you need more control over this functionality, you can define your own strategy:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { TranslocoFallbackStrategy } from '@jsverse/transloco';\n\nexport class CustomStrategy implements TranslocoFallbackStrategy {\n  getNextLangs(failedLang: string) {\n    return '...';\n  }\n}\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"getNextLangs")," method is called with the failed language, and should return an array containing the next languages to load, in order of preference."))}u.isMDXComponent=!0}}]);