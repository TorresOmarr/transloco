"use strict";(self.webpackChunktransloco_docs=self.webpackChunktransloco_docs||[]).push([[6488],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(n),h=r,d=u["".concat(p,".").concat(h)]||u[h]||c[h]||l;return n?a.createElement(d,o(o({ref:t},m),{},{components:n})):a.createElement(d,o({ref:t},m))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5796:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={id:"translation-in-the-template",title:"Translation in The Template",description:"Translation in The Template | Transloco Angular i18n"},o=void 0,i={unversionedId:"translation-in-the-template",id:"translation-in-the-template",title:"Translation in The Template",description:"Translation in The Template | Transloco Angular i18n",source:"@site/docs/translation-in-template.mdx",sourceDirName:".",slug:"/translation-in-the-template",permalink:"/transloco/docs/translation-in-the-template",draft:!1,editUrl:"https://github.com/jsverse/transloco/edit/master/docs/docs/translation-in-template.mdx",tags:[],version:"current",frontMatter:{id:"translation-in-the-template",title:"Translation in The Template",description:"Translation in The Template | Transloco Angular i18n"},sidebar:"docs",previous:{title:"Config Options",permalink:"/transloco/docs/getting-started/config-options"},next:{title:"Translation API",permalink:"/transloco/docs/translation-api"}},p={},s=[{value:"Structural Directive",id:"structural-directive",level:2},{value:"Utilizing the <code>prefix</code> input",id:"utilizing-the-prefix-input",level:3},{value:"Pipe",id:"pipe",level:2},{value:"Attribute Directive",id:"attribute-directive",level:2}],m={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"structural-directive"},"Structural Directive"),(0,r.kt)("p",null,"Using a structural directive is the ",(0,r.kt)("strong",{parentName:"p"},"recommended")," approach. It's DRY and efficient, as it creates one subscription per template:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},"<ng-container *transloco=\"let t\">\n  <p>{{ t('title') }}</p>\n\n  <comp [title]=\"t('title')\"></comp>\n</ng-container>\n")),(0,r.kt)("p",null,"Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"t")," function is ",(0,r.kt)("strong",{parentName:"p"},"memoized"),". It means that given the same key it will return the result directly from the cache."),(0,r.kt)("p",null,"We can pass a ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," object as the second parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},"<ng-container *transloco=\"let t\">\n  <p>{{ t('name', { name: 'Transloco' }) }}</p>\n</ng-container>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="en.json"',title:'"en.json"'},'{\n  "name": "My name is {{name}}"\n}\n')),(0,r.kt)("p",null,"We can instruct the directive to use a ",(0,r.kt)("inlineCode",{parentName:"p"},"different")," language in our template:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'{1} title="home.component.html"',"{1}":!0,title:'"home.component.html"'},"<ng-container *transloco=\"let t; lang: 'es'\">\n  <p>{{ t('title') }}</p>\n</ng-container>\n")),(0,r.kt)("p",null,"This will translate each key based on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Spanish")," language translation file."),(0,r.kt)("h3",{id:"utilizing-the-prefix-input"},"Utilizing the ",(0,r.kt)("inlineCode",{parentName:"h3"},"prefix")," input"),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"This input was previously named ",(0,r.kt)("inlineCode",{parentName:"p"},"read")," and was renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"prefix")," starting v7.1.0.",(0,r.kt)("br",null),"\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"read")," input is deprecated and will be removed in v8.")),(0,r.kt)("p",null,"We can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"prefix")," input in the structural directive to get translations of a particular nested (including deeply nested) property."),(0,r.kt)("p",null,"Let's say we need to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"dashboard")," scope all over the template. Given this translation file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="en.json"',title:'"en.json"'},'{\n  "foo": "Foo",\n  "bar": "Bar",\n  "dashboard": {\n    "title": "Dashboard Title",\n    "desc": "Dashboard Desc"\n  }\n}\n')),(0,r.kt)("p",null,"we can write:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'{1} title="home.component.html"',"{1}":!0,title:'"home.component.html"'},"<ng-container *transloco=\"let t; prefix: 'dashboard'\">\n  <p>{{ t('title') }}</p>\n</ng-container>\n")),(0,r.kt)("p",null,"without having to repeat the ",(0,r.kt)("inlineCode",{parentName:"p"},"dashboard")," key in each translation. Under the hood, it will do the following for you:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},"<ng-container *transloco=\"let t;\">\n  <h1>{{ t('dashboard.title') }}</h1>\n  <p>{{ t('dashboard.desc') }}</p>\n</ng-container>\n")),(0,r.kt)("h2",{id:"pipe"},"Pipe"),(0,r.kt)("p",null,"The second option we have is to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"transloco")," pipe:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},"<span>{{ 'home' | transloco }}</span>\n")),(0,r.kt)("p",null,"Use it with ",(0,r.kt)("inlineCode",{parentName:"p"},"params"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},"<span>{{ 'alert' | transloco: { value: dynamic } }}</span>\n")),(0,r.kt)("p",null,"Use it with ",(0,r.kt)("inlineCode",{parentName:"p"},"inputs"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},"<span [attr.alt]=\"'hello' | transloco\">Attribute</span>\n<span [title]=\"'hello' | transloco\">Property</span>\n")),(0,r.kt)("p",null,"Use it with a different ",(0,r.kt)("inlineCode",{parentName:"p"},"language"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},"<span>{{ 'alert' | transloco:params:'es' }}</span>\n")),(0,r.kt)("h2",{id:"attribute-directive"},"Attribute Directive"),(0,r.kt)("p",null,"The last option we have is to use ",(0,r.kt)("inlineCode",{parentName:"p"},"transloco")," attribute directive:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},'<span transloco="home"></span>\n')),(0,r.kt)("p",null,"Use it with ",(0,r.kt)("inlineCode",{parentName:"p"},"params"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},'<span transloco="alert" [translocoParams]="{ value: dynamic }"></span>\n')),(0,r.kt)("p",null,"Use it with a different ",(0,r.kt)("inlineCode",{parentName:"p"},"language"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.component.html"',title:'"home.component.html"'},'<span transloco="home" translocoLang="es"></span>\n')))}c.isMDXComponent=!0}}]);