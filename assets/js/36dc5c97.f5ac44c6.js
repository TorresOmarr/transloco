"use strict";(self.webpackChunktransloco_docs=self.webpackChunktransloco_docs||[]).push([[7702],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=l(t),g=o,d=f["".concat(s,".").concat(g)]||f[g]||u[g]||a;return t?n.createElement(d,c(c({ref:r},p),{},{components:t})):n.createElement(d,c({ref:r},p))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=f;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=t[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1702:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={title:"Prefetch the User Language",description:"Recipe - Prefetch the User Language | Transloco Angular i18n"},c=void 0,i={unversionedId:"recipes/prefetch",id:"recipes/prefetch",title:"Prefetch the User Language",description:"Recipe - Prefetch the User Language | Transloco Angular i18n",source:"@site/docs/recipes/prefetch.mdx",sourceDirName:"recipes",slug:"/recipes/prefetch",permalink:"/transloco/docs/recipes/prefetch",draft:!1,editUrl:"https://github.com/jsverse/transloco/edit/master/docs/docs/recipes/prefetch.mdx",tags:[],version:"current",frontMatter:{title:"Prefetch the User Language",description:"Recipe - Prefetch the User Language | Transloco Angular i18n"},sidebar:"docs",previous:{title:"Angular",permalink:"/transloco/docs/migration/angular"},next:{title:"Using xliff",permalink:"/transloco/docs/recipes/xliff"}},s={},l=[{value:"Prefetch the User Language",id:"prefetch-the-user-language",level:2}],p={toc:l};function u(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"prefetch-the-user-language"},"Prefetch the User Language"),(0,o.kt)("p",null,"We recommend pre-emptively fetching the user\u2019s data from the server, including internationalization settings, and making it available to the components, before we allow the user to interact with them."),(0,o.kt)("p",null,"We want to ensure the data is available, because we don\u2019t want to incur a bad user experience, such as jumpy content or flickering CSS."),(0,o.kt)("p",null,"Here's how you can achieve this using the ",(0,o.kt)("inlineCode",{parentName:"p"},"APP_INITIALIZER")," token:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { APP_INITIALIZER } from '@angular/core';\nimport { UserService } from './user.service';\nimport { TranslocoService } from '@jsverse/transloco';\n\nexport function preloadUser(userService: UserService, transloco: TranslocoService) {\n  return function() {\n    return userService.getUser().then(({ lang }) => {\n      transloco.setActiveLang(lang);\n      return transloco.load(lang).toPromise();\n    }\n  };\n}\n\nexport const preLoad = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: preloadUser,\n  deps: [UserService, TranslocoService]\n};\n")),(0,o.kt)("p",null,"This will make sure the application doesn't bootstrap before Transloco loads the translation file based on the current user's language."),(0,o.kt)("p",null,"You can read more about it in ",(0,o.kt)("a",{parentName:"p",href:"https://netbasal.com/optimize-user-experience-while-your-angular-app-loads-7e982a67ff1a"},"this article"),"."))}u.isMDXComponent=!0}}]);